knitr::opts_chunk$set(echo = TRUE)
days = 1:365
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:525){
sampleClass = sample(days, 25, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - 2
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
days = 1:365
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:525){
sampleClass = sample(days, 35, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - 5
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
days = 1:365
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:525){
sampleClass = sample(days, 30, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - 8
else bank = bank + 1
}
saveArray[k]= bank
}
days = 1:365
students = 35
classes = 15
runs = students*classes
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, 525, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - 8
else bank = bank + 1
}
saveArray[k]= bank
}
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 35
classes = 15
runs = students*classes
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, runs, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - 8
else bank = bank + 1
}
saveArray[k]= bank
}
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 35
classes = 15
runs = students*classes
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - 8
else bank = bank + 1
}
saveArray[k]= bank
}
days = 1:365
students = 35
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 35
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
days = 1:365
students = 35
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
days = 1:365
students = 35
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
days = 1:365
students = 35
classes = 15
runs = students*classes
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == 35) bank = bank - 2
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
days = 1:365
students = 35
classes = 15
runs = students*classes
payout=2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
days = 1:365
students = 40
classes = 15
runs = students*classes
payout=2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 40
classes = 15
runs = students*classes
payout=2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 40
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 25
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 28
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 29
classes = 15
runs = students*classes
payout = 3
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 29
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 40
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 35
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
knitr::opts_chunk$set(echo = TRUE)
days = 1:365
students = 29
classes = 15
runs = students*classes
payout = 2
saveArray=vector('numeric')
for(k in 1:1000){
bank = 0
for(i in 1:runs){
sampleClass = sample(days, students, replace = TRUE)
repeats = length(unique(sampleClass))
if (repeats == students) bank = bank - payout
else bank = bank + 1
}
saveArray[k]= bank
}
hist(saveArray)
print('average amt:')
print(mean(saveArray))
knitr::opts_chunk$set(echo = TRUE)
print('average amt:')
print(mean(saveArray))
